server {

    listen 80;
    listen [::]:80;

    server_name jjtombtomb.australiaeast.cloudapp.azure.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
#
#     proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#     proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#     proxy_set_header Host $host; # to forward the original host requested by the client
#
#     add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#     add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#     add_header Host $host; # to forward the original host requested by the client
#
    location / {
        return 301 https://jjtombtomb.australiaeast.cloudapp.azure.com$request_uri;
    }

#     proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#     proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#     proxy_set_header Host $host; # to forward the original host requested by the client
#
#     add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#     add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#     add_header Host $host; # to forward the original host requested by the client
#
#     location / {
#         root /usr/share/nginx/html;
#     }
#
#     location /follow {
#         proxy_pass http://host.docker.internal:8081;
#    }
#
#    location /follow/* {
#         proxy_pass http://host.docker.internal:8081;
#    }
#
#    location /post {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /post/* {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /user {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /user/* {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /auth {
#         proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#         proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#         proxy_set_header Host $host; # to forward the original host requested by the client
#         proxy_pass http://host.docker.internal:8080/;
#    }
#
#    location /auth/* {
#         proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#         proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#         proxy_set_header Host $host; # to forward the original host requested by the client
#         add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#         add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#         add_header Host $host; # to forward the original host requested by the client
#         proxy_pass http://host.docker.internal:8080/;
#    }

}

# server {
#     listen 443 default_server ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name http://jjtombtomb.australiaeast.cloudapp.azure.com/;
#
#     ssl_certificate /etc/nginx/ssl/live/http://jjtombtomb.australiaeast.cloudapp.azure.com//fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/live/http://jjtombtomb.australiaeast.cloudapp.azure.com//privkey.pem;
#
#     proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#     proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#     proxy_set_header Host $host; # to forward the original host requested by the client
#
#     add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#     add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#     add_header Host $host; # to forward the original host requested by the client
#
#     location / {
#         root /usr/share/nginx/html;
#     }
#
#     location /follow {
#         proxy_pass http://host.docker.internal:8081;
#    }
#
#    location /follow/* {
#         proxy_pass http://host.docker.internal:8081;
#    }
#
#    location /post {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /post/* {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /user {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /user/* {
#         proxy_pass http://host.docker.internal:8082;
#    }
#
#    location /auth {
#         proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#         proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#         proxy_set_header Host $host; # to forward the original host requested by the client
#         proxy_pass http://host.docker.internal:8080/;
#    }
#
#    location /auth/* {
#         proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#         proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#         proxy_set_header Host $host; # to forward the original host requested by the client
#         add_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
#         add_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
#         add_header Host $host; # to forward the original host requested by the client
#         proxy_pass http://host.docker.internal:8080/;
#    }
#
#    location /admin {
#         proxy_pass http://host.docker.internal:8080/;
#    }
#
#    location /admin/* {
#         proxy_pass http://host.docker.internal:8080/;
#    }
# }